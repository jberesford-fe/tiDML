[{"path":"https://jberesford-fe.github.io/tiDML/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Justin Beresford Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jberesford-fe.github.io/tiDML/articles/User-defined-recipies.html","id":"tidml-with-user-defined-recipies","dir":"Articles","previous_headings":"","what":"TiDML with User-defined Recipies","title":"User-defined-recipies","text":"","code":"library(tiDML)  fit <- dml_plr(   mtcars,   y = \"mpg\",   d = \"am\",   x = c(\"cyl\", \"disp\", \"hp\", \"drat\", \"wt\", \"qsec\", \"vs\", \"gear\", \"carb\"),   m_model = \"rf\",   g_model = \"rf\" )   print(fit) #> DML-PLR estimate (res_y ~ res_d) #>   theta: 0.867581 #>   se:    0.952977 #>   95% CI: [-1.000221, 2.735382]"},{"path":"https://jberesford-fe.github.io/tiDML/articles/get-started.html","id":"simple-version","dir":"Articles","previous_headings":"","what":"Simple version","title":"get-started","text":"","code":"library(tiDML)  fit <- dml_plr(   mtcars,   y = \"mpg\",   d = \"am\",   x = c(\"cyl\", \"disp\", \"hp\", \"drat\", \"wt\", \"qsec\", \"vs\", \"gear\", \"carb\"),   m_model = \"rf\",   g_model = \"rf\" )   print(fit) #> DML-PLR estimate (res_y ~ res_d) #>   theta: 0.867581 #>   se:    0.952977 #>   95% CI: [-1.000221, 2.735382]"},{"path":"https://jberesford-fe.github.io/tiDML/articles/get-started.html","id":"complex-version","dir":"Articles","previous_headings":"","what":"Complex version","title":"get-started","text":"","code":"fit <- dml_plr(   mtcars,   y = \"mpg\",   d = \"am\",   x = c(\"cyl\", \"disp\", \"hp\", \"drat\", \"wt\", \"qsec\", \"vs\", \"gear\", \"carb\"),   m_model = \"rf\",   g_model = \"rf\" )   print(fit) #> DML-PLR estimate (res_y ~ res_d) #>   theta: 0.805690 #>   se:    1.226462 #>   95% CI: [-1.598132, 3.209512]"},{"path":"https://jberesford-fe.github.io/tiDML/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Justin Beresford. Author, maintainer.","code":""},{"path":"https://jberesford-fe.github.io/tiDML/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beresford J (2025). tiDML: Double Machine Learning Tidymodels. R package version 0.0.0.9000.","code":"@Manual{,   title = {tiDML: Double Machine Learning with Tidymodels},   author = {Justin Beresford},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"https://jberesford-fe.github.io/tiDML/index.html","id":"tidml","dir":"","previous_headings":"","what":"Double Machine Learning with Tidymodels","title":"Double Machine Learning with Tidymodels","text":"goal tiDML twofold: Simple first pass: provide straightforward way run Double Machine Learning (DML) R. Users need specify data, formula, model type string (e.g. “random forest”, “xgboost” etc). Defaults set sensible values, ’s quick first pass ask: “OLS results change materially DML?” Run DML tidymodels way: flexible framework lets define inspect stages DML process explicitly. Specify first- second-stage models parsnip, handle preprocessing recipes, combine workflows. custom nuisance models fit seamlessly tiDML pipeline. short, tiDML can simplify things, ’s main contribution letting DML explicitly, way tidymodels user expect.","code":""},{"path":"https://jberesford-fe.github.io/tiDML/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Double Machine Learning with Tidymodels","text":"can install development version tiDML GitHub via pak, pacman remotes:","code":"# Using pak pak::pak(\"jberesford-fe/tiDML\")  # using pacman pacman::p_load_gh(\"jberesford-fe/tiDML\")  # using remotes remotes::install_github(\"jberesford-fe/tiDML\")"},{"path":"https://jberesford-fe.github.io/tiDML/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Double Machine Learning with Tidymodels","text":"basic example shows run DML PLR model random forests nuisance models, taking parameters default.","code":"library(tiDML)  fit <- dml_plr(   data = mtcars,   y = \"mpg\",   d = \"am\",   x = c(\"cyl\", \"disp\", \"hp\", \"drat\", \"wt\", \"qsec\", \"vs\", \"gear\", \"carb\"),   m_model = \"rf\",   g_model = \"rf\" )   print(fit)"},{"path":"https://jberesford-fe.github.io/tiDML/reference/base_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Default recipe blueprint for nuisance models — base_recipe","title":"Default recipe blueprint for nuisance models — base_recipe","text":"Default recipe blueprint nuisance models","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/base_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default recipe blueprint for nuisance models — base_recipe","text":"","code":"base_recipe(data, outcome, predictors)"},{"path":"https://jberesford-fe.github.io/tiDML/reference/base_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default recipe blueprint for nuisance models — base_recipe","text":"data Training data outcome Outcome column (symbol string) predictors Character vector predictor names","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/base_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default recipe blueprint for nuisance models — base_recipe","text":"recipes::recipe","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/crossfit_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-fit residuals across outer folds — crossfit_residuals","title":"Cross-fit residuals across outer folds — crossfit_residuals","text":"Cross-fit residuals across outer folds","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/crossfit_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-fit residuals across outer folds — crossfit_residuals","text":"","code":"crossfit_residuals(data, outcome, predictors, spec, folds_idx, recipe_factory)"},{"path":"https://jberesford-fe.github.io/tiDML/reference/dml_plr.html","id":null,"dir":"Reference","previous_headings":"","what":"DML-PLR (Partially Linear Regression) with tidymodels — dml_plr","title":"DML-PLR (Partially Linear Regression) with tidymodels — dml_plr","text":"DML-PLR (Partially Linear Regression) tidymodels","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/dml_plr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DML-PLR (Partially Linear Regression) with tidymodels — dml_plr","text":"","code":"dml_plr(   data,   y,   d,   x,   folds_outer = make_folds(data, v = 5),   resamples_tune = rsample::vfold_cv(data, v = 5),   m_model = \"rf\",   g_model = \"rf\",   recipe_shared = NULL,   recipe_m = NULL,   recipe_g = NULL,   impute_predictors = FALSE,   grid_size = list(m = 15, g = 15),   vcov_type = \"HC2\" )"},{"path":"https://jberesford-fe.github.io/tiDML/reference/dml_plr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DML-PLR (Partially Linear Regression) with tidymodels — dml_plr","text":"data Data frame y Outcome column d Treatment column x Character vector predictors folds_outer Outer folds (shared nuisances) cross-fitting resamples_tune Resamples global tuning (e.g., vfold_cv df) m_model, g_model Either parsnip spec one \"rf\",\"xgb\",\"glmnet\",\"linear\" recipe_shared Optional recipe factory used nuisances recipe_m, recipe_g Optional separate recipe factory nuisance grid_size list(m=, g=) grid sizes tuning vcov_type Sandwich variance type (e.g., \"HC2\")","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/dml_plr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DML-PLR (Partially Linear Regression) with tidymodels — dml_plr","text":"list estimate, SE, CI, objects audit","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/load_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Example Data — load_example_data","title":"Load Example Data — load_example_data","text":"function loads example data demonstrating tiDML package.","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/load_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Example Data — load_example_data","text":"","code":"load_example_data()"},{"path":"https://jberesford-fe.github.io/tiDML/reference/load_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Example Data — load_example_data","text":"dataframe simulated data DML.","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/load_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Example Data — load_example_data","text":"","code":"df <- tiDML::load_example_data() head(df) #>           Y           D          X1          X2 #> 1  1.444424  0.90453131 -0.56047565 -0.60189285 #> 2  2.743067  1.14306579 -0.23017749 -0.99369859 #> 3  4.355613  2.45333840  1.55870831  1.02678506 #> 4  3.817535  1.67776067  0.07050839  0.75106130 #> 5  2.917516 -0.03194895  0.12928774 -1.50916654 #> 6 10.265308  3.92665018  1.71506499 -0.09514745"},{"path":"https://jberesford-fe.github.io/tiDML/reference/numeric_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce predictions to numeric vector (regression or class prob) — numeric_pred","title":"Coerce predictions to numeric vector (regression or class prob) — numeric_pred","text":"Coerce predictions numeric vector (regression class prob)","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/numeric_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce predictions to numeric vector (regression or class prob) — numeric_pred","text":"","code":"numeric_pred(fitted_wf, new_data, positive_class = NULL)"},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve engine and sensible args for a model kind — resolve_engine","title":"Resolve engine and sensible args for a model kind — resolve_engine","text":"Resolve engine sensible args model kind","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve engine and sensible args for a model kind — resolve_engine","text":"","code":"resolve_engine(kind, mode)"},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_recipe_factory.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve a recipe input into a factory function — resolve_recipe_factory","title":"Resolve a recipe input into a factory function — resolve_recipe_factory","text":"Resolve recipe input factory function","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_recipe_factory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve a recipe input into a factory function — resolve_recipe_factory","text":"","code":"resolve_recipe_factory(recipe_in = NULL)"},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_recipe_factory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve a recipe input into a factory function — resolve_recipe_factory","text":"recipe_in NULL, recipe object, factory function(data, outcome, predictors)->recipe","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_recipe_factory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve a recipe input into a factory function — resolve_recipe_factory","text":"function(data, outcome, predictors) -> recipe","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Accept a parsnip spec OR a short string and return a finalized spec — resolve_spec","title":"Accept a parsnip spec OR a short string and return a finalized spec — resolve_spec","text":"Accept parsnip spec short string return finalized spec","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accept a parsnip spec OR a short string and return a finalized spec — resolve_spec","text":"","code":"resolve_spec(model_in, mode = \"regression\")"},{"path":"https://jberesford-fe.github.io/tiDML/reference/resolve_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accept a parsnip spec OR a short string and return a finalized spec — resolve_spec","text":"model_in parsnip model spec one \"rf\",\"xgb\",\"glmnet\",\"linear\" mode \"regression\" \"classification\"","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/tune_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune any parsnip spec on given resamples with a recipe — tune_any","title":"Tune any parsnip spec on given resamples with a recipe — tune_any","text":"Tune parsnip spec given resamples recipe","code":""},{"path":"https://jberesford-fe.github.io/tiDML/reference/tune_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune any parsnip spec on given resamples with a recipe — tune_any","text":"","code":"tune_any(spec, rec, resamples, data_x, metrics = NULL, grid_size = 15)"}]
